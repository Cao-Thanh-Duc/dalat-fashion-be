generator client {
  provider = "prisma-client-js"
}

generator dbml {
  provider = "prisma-dbml-generator"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// bỏ type_account và employee
model Users {
  UserID       String        @id @default(cuid())
  UserName     String
  Email        String        @unique
  Password     String
  RoleID       String?
  Role         Roles?        @relation(fields: [RoleID], references: [RoleID])
  UserProducts UserProduct[]

  @@map("Users")
}

// Danh mục sản phẩm
model ProductCategory {
  id       String     @id @default(cuid())
  name     String
  Products Products[]

  @@map("ProductCategory")
}

// Nhà cung cấp
model Supplier {
  id       String     @id @default(cuid())
  SuppName String
  Phone    String?
  Email    String?
  Products Products[]

  @@map("Supplier")
}

// Sản phẩm
model Products {
  ProductID    String           @id @default(cuid())
  ProductName  String
  Size         String
  Quantity     Int?
  Old_price    Float?
  Sale_price   Float
  Unit         String
  Describe     String?
  CateID       String?
  SuppID       String?
  Category     ProductCategory? @relation(fields: [CateID], references: [id])
  Supplier     Supplier?        @relation(fields: [SuppID], references: [id])
  Images       ListImage[]
  Details      DetailOrder[]
  UserProducts UserProduct[]

  @@map("Products")
}

// bỏ
model ListImage {
  ImageID   String    @id @default(cuid())
  ProductID String?
  ImageURL  String?
  Product   Products? @relation(fields: [ProductID], references: [ProductID])

  @@map("ListImage")
}

// Role user trong hệ thống
model Roles {
  RoleID   String  @id @default(cuid())
  RoleName String  @unique
  Users    Users[]

  @@map("Roles")
}

// bỏ
model Employee {
  EmployeeID String    @id @default(cuid())
  FullName   String
  Gender     Boolean
  BirthDate  DateTime?
  Phone      String
  Email      String?
  Orders     Orders[]

  @@map("Employee")
}

// Bỏ

model Customers {
  CustomerID String    @id @default(cuid())
  FullName   String
  Gender     Boolean
  BirthDate  DateTime?
  Phone      String
  Email      String?
  Address    String?
  Orders     Orders[]

  @@map("Customers")
}

// Khuyến mãi

model Promotions {
  PromotionID String        @id @default(cuid())
  Condition   String?
  Value       Float?
  StartDate   DateTime?
  EndDate     DateTime?
  Details     DetailOrder[]

  @@map("Promotions")
}

// Hóa đơn
model Orders {
  OrderID    String        @id @default(cuid())
  SaleDate   DateTime
  Total      Float
  Status     String?
  EmployeeID String?
  CustomerID String?
  Employee   Employee?     @relation(fields: [EmployeeID], references: [EmployeeID])
  Customer   Customers?    @relation(fields: [CustomerID], references: [CustomerID])
  Details    DetailOrder[]

  @@map("Orders")
}

// Chi tiết hóa đơn
model DetailOrder {
  DetailID    String      @id @default(cuid())
  OrderID     String?
  ProductID   String?
  ProductName String
  Quantity    Int
  Price       Float
  PromotionID String?
  Discount    Float
  Total       Float
  Order       Orders?     @relation(fields: [OrderID], references: [OrderID])
  Product     Products?   @relation(fields: [ProductID], references: [ProductID])
  Promotion   Promotions? @relation(fields: [PromotionID], references: [PromotionID])

  @@map("DetailOrder")
}

// bảng nhiều nhiều

// Mối quan hệ nhiều nhiều giữa User và Product
model UserProduct {
  id        String   @id @default(cuid())
  UserID    String
  ProductID String
  User      Users    @relation(fields: [UserID], references: [UserID])
  Product   Products @relation(fields: [ProductID], references: [ProductID])

  @@unique([UserID, ProductID])
  @@map("UserProduct")
}
